# -*- coding: utf-8 -*-
"""Project Sprint 6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YR6a28dQIH6usVD7_RpYW47wtbFYnQkB

# **Competitor Benchmarking**

## **Introduction**

This project aims to understand the pattern of ride-sharing activities in the city of Chicago that will helps Zuber to successfully penetrate in this particular area.

### Goal

1. Understanding the habit of passanger during certain condition of weather and destination.
2. 10 Top destination of ride-sharing service.
3. 10 Top taxi companies in Chicago area.
4. Testing hyphothesis.

### Stages

The project's phases are outlined below.

1. Open the data file and study its general information.

2. Prepare the data.

- Rename the column (use lowercase letters for all).
- Convert the data to the required data type.
- Describe which columns have had their data types changed and explain the reasons.
- If necessary, missing values will be handled
- Calculate the total sales (sales quantity across all regions) for each game and input these values into a separate column.

3. Using python to understand the top 10 destinations.

- Sort table to get the top 10 destinations in Chicago.
- Sort the top taxi companies performance.
- Create the graph to help visualize.
- Get the main summary.

4. Using python to testing the hyphothesis of certain trip pattern. In this case we will test that trip to O'Hare from Loop changed during bad weather.

- Set the H0: The average trip from Loop to O'Hare airport during rain on Saturday is the same.
- Set the H1: The average trip from Loop to O'Hare airport during rain on Saturday is different.
- Set alpha: in this case we will use 0.05

5. Draw the final conclusion

### Data Content

1. Neighborhoods Table: Data related to areas in the city of Chicago

- name: neighborhood name
- neighborhood_id: neighborhood code

2. Cabs Table: Data related to taxis

- cab_id: vehicle code
- vehicle_id: technical vehicle ID
- company_name: name of the company that owns the vehicle

3. Trips Table: Data related to trips

- trip_id: trip code
- cab_id: operating vehicle code
- start_ts: date and time trip started (time rounded to the nearest hour)
- end_ts: date and time trip ended (time rounded to the nearest hour)
- duration_seconds: trip duration in seconds
- distance_miles: trip distance in miles
- pickup_location_id: pickup location code
- dropoff_location_id: drop-off location code

4. Weather Records Table: Data related to weather

- record_id: weather recording code
- ts: date and time when weather recording was done (time rounded to the nearest hour)
- temperature: temperature at the time of weather recording
- description: brief description of weather conditions, such as "light rain" or "scattered clouds."

## **Initiations**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats as st
from scipy.stats import ttest_ind
import scipy.stats as stats

"""Load data given:"""

taxi = pd.read_csv('/content/moved_project_sql_result_01.csv')
trips = pd.read_csv('/content/moved_project_sql_result_04.csv')
trip_ohare = pd.read_csv('/content/moved_project_sql_result_07.csv')

"""Study general informastion"""

# Taxi table
taxi.head(3)

taxi.shape

taxi.info()

taxi.isnull().sum()

# Trips table
trips.head(3)

trips.shape

trips.info()

trips.isnull().sum()

# Loop to O'Hare trips
trip_ohare.head(3)

trip_ohare.shape

trip_ohare.info()

trip_ohare.isnull().sum()

"""## **Exploratory Data Analysis**

### **Top 10 destination & Top 10 taxi companies**
"""

trips.head()

trips_10 = trips.sort_values(by='average_trips', ascending=False)[:10]

trips_10

taxi_10 = taxi.sort_values(by='trips_amount', ascending=False)[:10]

taxi_10

# Top 10 destinations visualization
plt.figure(figsize=(10, 5))
plt.barh(trips_10['dropoff_location_name'], trips_10['average_trips'], color='purple')
plt.xlabel('Average Trips')
plt.ylabel('Destination')
plt.title('Top 10 Destinations')
plt.gca().invert_yaxis()
plt.legend(['Trips'])
plt.show()

# Top 10 taxi companies based on the number of trips visualization
plt.figure(figsize=(10, 5))
plt.barh(taxi_10['company_name'], taxi_10['trips_amount'], color='blue')
plt.xlabel('Total Trips')
plt.ylabel('Taxi Company')
plt.title('Top 10 Taxi Companies')
plt.gca().invert_yaxis()
plt.legend(['Trips'])
plt.show()

"""Insight

Findings:

- The top 3 destinations are Loop, River North, & Streeterville.
- The top 3 taxi company in Chicago area are Flash Cab, Taxi Affiliation Service, & Medallion Leasing.

Insights:

- The top 4 destination make up the majority of destination in Chicago area.
- Flash Cab dominating the competition in Chicago area.

Recommendations:

- Zuber should prioritize the hiring of driver partner from the top 4 areas to boost their efficiency and advantage the trip pattern.
- Learn the success of Flash Cab, and set up the price bar for the top 4 areas slightly below Flash Cab.

## **Testing Hyphothesis**

### Data Preparation
"""

trip_ohare.head()

trip_ohare['weather_conditions'].unique()

trip_ohare['weather_conditions'].value_counts()

good = trip_ohare.query('weather_conditions == "Good"').reset_index(drop=True)
bad = trip_ohare.query('weather_conditions == "Bad"').reset_index(drop=True)

good.info()

bad.info()

"""The data given is already filtered Saturday for the day

Now check the data distribution
"""

plt.title('Distribution of trip from Loop to OHare')
sns.violinplot(data=trip_ohare, x='duration_seconds', y='weather_conditions')
plt.show()

#Remove the outliers
def clean_outliers(data,col):
    q1 = data[col].quantile(0.25)
    q3 = data[col].quantile(0.75)
    iqr = q3 - q1
    lower_bound = q1 - (1.5*iqr)
    upper_bound = q3 + (1.5*iqr)

    data = data.loc[(data[col] > lower_bound) & (data[col] < upper_bound)]
    return data

good = clean_outliers(data = good, col = 'duration_seconds')
good

bad = clean_outliers(data = bad, col = 'duration_seconds')
bad

plt.title('Distribution of trip from Loop to OHare during good weather')
sns.violinplot(data = good, x = 'duration_seconds', y = 'weather_conditions')
plt.show()

plt.title('Distribution of trip from Loop to OHare during good weather')
sns.violinplot(data = bad, x = 'duration_seconds', y = 'weather_conditions')
plt.show()

"""### Testing Hyphothesis

- H0: The average trip from Loop to O'Hare airport during rain on Saturday is the same.
- H1: The average trip from Loop to O'Hare airport during rain on Saturday is different.
- Method using : Independent two sample test because its comparing two different conditions.
- alpha: in this case we will use 0.05
"""

np.var(good['duration_seconds']), np.var(bad['duration_seconds'])

alpha = 0.05

p_value_levene = stats.levene(good['duration_seconds'], bad['duration_seconds']).pvalue
print(p_value_levene)

if p_value_levene > alpha:
    print('H0 is accepted: The average trip from Loop to OHare airport during rain and not rain on Saturday is the same.')
else:
    print('H0 is rejected: The average trip from Loop to OHare airport during rain and not rain on Saturday is different.')
print('The average trip from Loop to OHare during good weather on Saturday is', good['duration_seconds'].mean())
print('The average trip from Loop to OHare during bad weather on Saturday is', bad['duration_seconds'].mean())

p_value = stats.ttest_ind(good['duration_seconds'], bad['duration_seconds'], equal_var=False).pvalue
print(p_value)

if p_value > alpha:
    print('H0 is accepted: The average trip from Loop to OHare airport during rain and not rain on Saturday is the same.')
else:
    print('H0 is rejected: The average trip from Loop to OHare airport during rain and not rain on Saturday is different.')
print('The average trip from Loop to OHare during good weather on Saturday is', good['duration_seconds'].mean())
print('The average trip from Loop to OHare during bad weather on Saturday is', bad['duration_seconds'].mean())

"""Insight

Based on the hyphothesis testing.

- p_value: 9.108025319217097e-15
- H0 is rejected: The average trip from Loop to OHare airport during rain and not rain on Saturday is different.
- The average trip from Loop to OHare during good weather on Saturday is 1976.8163265306123
- The average trip from Loop to OHare during bad weather on Saturday is 2434.785310734463

## **Conclusion**

This project aims to understand the pattern of ride-sharing activities in the city of Chicago that will helps Zuber to successfully penetrate in this particular area.

1. Data Initiation

Taxi

- company_name: Name of taxi comapnies
- trips_amount: Number of trips of each taxi companies

Trips

- dropoff_location_name: destination of trip
- average_trips: number of trips

Trip_ohare

- start_ts: date of trip
- weather_conditions: condition of weather
- duration_seconds: duration of trip

2. Data Analyzing

Findings:

- The top 3 destinations are Loop, River North, & Streeterville.
- The top 3 taxi company in Chicago area are Flash Cab, Taxi Affiliation Service, & Medallion Leasing.

Insights:

- The top 4 destination make up the majority of destination in Chicago area.
- Flash Cab dominating the competition in Chicago area.

Recommendations:

- Zuber should prioritize the hiring of driver partner from the top 4 areas to boost their efficiency and advantage the trip pattern.
- Learn the success of Flash Cab, and set up the price bar for the top 4 areas slightly below Flash Cab.

5. Hyphothesis Testing

Based on the hyphothesis testing.

Using Levene method
- 0.3563611473946102
- H0 is accepted: The average trip from Loop to OHare airport during rain and not rain on Saturday is the same.
- The average trip from Loop to OHare during good weather on Saturday is 1976.8163265306123
- The average trip from Loop to OHare during bad weather on Saturday is 2434.785310734463

Using T-test
- p_value: 9.108025319217097e-15
- H0 is rejected: The average trip from Loop to OHare airport during rain and not rain on Saturday is different.
- The average trip from Loop to OHare during good weather on Saturday is 1976.8163265306123
- The average trip from Loop to OHare during bad weather on Saturday is 2434.785310734463

Highlight:

1. Based on the analysing, the top 3 destionations are Loop, River North, & Streeterville which all located in downtown Chichago.
2. The most popular company based on the trips is Flash Cab.
3. There is significant increrased of service demand during bad weather from downtown to airport.

Recommendation:

1. Zuber need to focus to sell its product to urban area or 9-5 worker that mostly located in the downtown.
2. Benchmarking should be done to Flash Cab, Taxi Affiliation Service, & Medallion Leasing.
3. For high demanding area like downtown as destination, Zuber should have really competitive price in order to get initial customer.
4. For 4 seasons and car culture city like Chicago, weather really affect the service of ride-sharing. Strategy for fluctuated price based on the demand should be implemented in order to gain revenue.
"""

